(define (domain table-tamp)
    (:requirements :strips :equality)
    (:predicates
        (Conf ?q)
        (Pose ?p)
        (GraspPose ?o ?p)
        (PlacePose ?o ?g ?p)
        (AtConf ?q)
        (AtPose ?o ?p)
        (On ?o ?r)
        (Kin ?q ?p)
        (Holding ?o)
        (HandEmpty)
        (Graspable ?o)
        (CF-Trajectory ?q1 ?q2 ?t)
        (Placed ?o)
        (Region ?r)
    )

    (:action move
        :parameters (?q1 ?q2 ?t)
        :precondition (and (CF-Trajectory ?q1 ?q2 ?t)
                            (Conf ?q1)
                            (Conf ?q2)
                            (AtConf ?q1))
        :effect (and (AtConf ?q2) (not (AtConf ?q1)))
    )

    (:action grab
        :parameters (?o ?p1 ?p2 ?q)
        :precondition (and (HandEmpty)
                          (AtConf ?q)
                          (Kin ?q ?p2)
                          (AtPose ?o ?p1)
                          (Pose ?p2)
                          (GraspPose ?o ?p2)
                          (Graspable ?o))
        :effect (and (Holding ?o) (not (HandEmpty)))
    )

    (:action place
        :parameters (?o ?p ?g ?q)
        :precondition (and (not (HandEmpty))
                          (AtConf ?q)
                          (Kin ?q ?p)
                          (Pose ?p)
                          (PlacePose ?o ?g ?p)
                          (Holding ?o)
                          (GraspPose ?o ?g))
        :effect (and (not (Holding ?o)) (HandEmpty) (AtPose ?o ?p))
    )

    (:derived (On ?o ?r)
        (exists (?g ?p) (and (Region ?r) (PlacePose ?o ?g ?p) (GraspPose ?o ?g) (AtPose ?o ?p)))
    )
)